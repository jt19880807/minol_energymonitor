<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.minol.energymonitor.repository.HeatMeterReadingMapper" >
    <resultMap id="HeatMeterReadingResult" type="com.minol.energymonitor.domain.entity.HeatMeterReading">
        <id column="id" property="id"/>
        <result column="meter_id" property="meter_id"/>
        <result column="date" property="date"/>
        <result column="instantaneousflow" property="instantaneousflow"/>
        <result column="power" property="power"/>
        <result column="accumulationheat" property="accumulationheat"/>
        <result column="accumulationcooling" property="accumulationcooling"/>
        <result column="supplywatertemp" property="supplywatertemp"/>
        <result column="returnwatertemp" property="returnwatertemp"/>
        <result column="isdeleted" property="isdeleted"/>
        <result column="create_time" property="create_time"/>
        <association property="meter" column="meter_id" select="com.minol.energymonitor.repository.MeterMapper.selectMeterById"/>
    </resultMap>
    <!--表名 -->
    <sql id="tableName">
        heatmetereading
    </sql>

    <sql id="field">
        meter_id,
        date,
        instantaneousflow,
        power,
        accumulationheat,
        accumulationcooling,
        supplywatertemp,
        returnwatertemp,
        isdeleted,
        create_time
    </sql>

    <sql id="fieldValue">
        #{meter_id},
        #{date},
        #{instantaneousflow},
        #{power},
        #{accumulationheat},
        #{accumulationcooling},
        #{supplywatertemp},
        #{returnwatertemp},
        #{isdeleted},
        #{create_time}
    </sql>

    <!--根据主键ID查询热量表读数信息-->
    <select id="selectHeatMeterReadingById"  parameterType="int" resultType="com.minol.energymonitor.domain.entity.HeatMeterReading">
        SELECT * FROM <include refid="tableName"></include> WHERE isdeleted=0 AND id=#{id}
    </select>

    <!--查询某个项目再某个时间段的-->
    <select id="selectHeatByProjectId" resultType="java.lang.Double">
      select IFNULL(sum(r.cha),-1) as heat from (
        select (max(accumulationheat)-min(accumulationheat)) as cha from heatmetereading h
        WHERE h.meter_id in(
          select m.id from meter m, collector c,building b
          where m.collector_id=c.id AND c.building_id=b.id AND b.project_id=#{projectId}
        )
          AND h.date BETWEEN #{startDate} AND #{endDate}
        GROUP BY meter_id
      ) r
    </select>

    <!--查询指定ID范围的楼栋信息-->
    <select id="selectHeatMeterReadings" parameterType="Map" resultMap="HeatMeterReadingResult">
        SELECT h.id, h.meter_id,
        h.date,
        h.instantaneousflow,
        h.power,
        h.accumulationheat,
        h.accumulationcooling,
        h.supplywatertemp,
        h.returnwatertemp,
        h.isdeleted,
        h.create_time from heatmetereading h, meter m,collector c,building b where
        h.meter_id=m.id AND
        m.collector_id=c.id AND
        c.building_id=b.id AND
        <if test="projectId!= 0"> <!--搜索指定的项目id-->
            b.project_id=#{projectId}
            AND
        </if>
        <if test="areaId!=0"> <!--搜索指定的小区id-->
            b.area_id=#{areaId}
            AND
        </if>
        <if test="buildingId!=0"> <!--搜索指定的楼栋id-->
            b.id=#{buildingId}
            AND
        </if>
        <if test="meterId!=0"> <!--搜索指定的表id-->
            h.meter_id=#{meterId}
            AND
        </if>
        h.date BETWEEN #{startDate} AND #{endDate} AND m.isdeleted=0 AND
        c.isdeleted=0 AND b.isdeleted=0 AND h.isdeleted=0
        ORDER BY h.date desc
    </select>

    <!--批量删除-->
    <update id="batchDeleteHeatMeterReadings" parameterType="java.util.List">
        UPDATE <include refid="tableName"></include>
        SET isdeleted=1
        WHERE id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item.id}
        </foreach>
    </update>

    <!--插入一条楼栋信息-->
    <insert id="insertHeatMeterReading" parameterType="com.minol.energymonitor.domain.entity.HeatMeterReading">
        INSERT <include refid="tableName"></include> (
        <include refid="field"></include>
        ) VALUES (
        <include refid="fieldValue"></include>
        )
    </insert>

    <!--修改楼栋信息-->
    <update id="updateHeatMeterReading" parameterType="com.minol.energymonitor.domain.entity.HeatMeterReading">
        UPDATE <include refid="tableName"></include>
        SET
        meter_id=#{meter_id},
        date=#{date},
        instantaneousflow=#{instantaneousflow},
        power=#{power},
        accumulationheat=#{accumulationheat},
        accumulationcooling=#{accumulationcooling},
        supplywatertemp=#{supplywatertemp},
        returnwatertemp=#{returnwatertemp}
        WHERE id=#{id}
    </update>
</mapper>