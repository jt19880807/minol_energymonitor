<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.minol.energymonitor.repository.CollectorMapper" >
    <resultMap id="CollectorResult" type="com.minol.energymonitor.domain.entity.Collector">
        <id column="id" property="id"/>
        <result column="number" property="number"/>
        <result column="building_id" property="building_id"/>
        <result column="current_version" property="current_version"/>
        <result column="last_version" property="last_version"/>
        <result column="isdeleted" property="isdeleted"/>
        <result column="create_time" property="create_time"/>
        <result column="update_time" property="update_time"/>
        <result column="create_by" property="create_by"/>
        <result column="update_by" property="update_by"/>
        <association property="building" column="building_id" select="com.minol.energymonitor.repository.BuildingMapper.selectBuildingById"/>
    </resultMap>
    <!--下拉框返回结果-->
    <resultMap id="CollectorResult_Select" type="com.minol.energymonitor.domain.entity.Collector">
        <id column="id" property="id"/>
        <result column="number" property="number"/>
    </resultMap>
    <!--表名 -->
    <sql id="tableName">
        collector
    </sql>

    <sql id="field">
        number,
        building_id,
        isdeleted,
        create_time,
        update_time,
        create_by,
        update_by
    </sql>

    <sql id="fieldValue">
        #{number},
        #{building_id},
        #{isdeleted},
        #{create_time},
        #{update_time},
        #{create_by},
        #{update_by}
    </sql>

    <!--根据主键ID查询采集器信息-->
    <select id="selectCollectorById"  parameterType="int" resultMap="CollectorResult">
        SELECT * FROM <include refid="tableName"></include> WHERE isdeleted=0 AND id=#{id}
    </select>

    <!--查询指定ID范围的楼栋信息-->
    <select id="selectCollectors" parameterType="Map" resultMap="CollectorResult">
        SELECT * from collector c,building b where
        c.building_id=b.id AND
        <if test="projectIds= '0'"> <!--搜索指定的id-->
            b.project_id=#{projectId}
            AND
        </if>
        <if test="areaId!=0"> <!--搜索指定的id-->
            b.area_id=#{areaId}
            AND
        </if>
        <if test="buildingId!=0"> <!--搜索指定的id-->
            b.id=#{buildingId}
            AND
        </if>
        c.isdeleted=0 AND b.isdeleted=0
    </select>

    <!--根据项目ID或者小区ID或者楼栋ID查找下面的采集器,仅返回ID和Number-->
    <select id="selectCollectorWithIDAndNumber" parameterType="Map" resultMap="CollectorResult_Select">
        SELECT c.id,c.number from collector c,building b where
        c.building_id=b.id AND
        <if test="projectIds= '0'"> <!--搜索指定的id-->
            b.project_id=#{projectId}
            AND
        </if>
        <if test="areaId!=0"> <!--搜索指定的id-->
            b.area_id=#{areaId}
            AND
        </if>
        <if test="buildingId!=0"> <!--搜索指定的id-->
            b.id=#{buildingId}
            AND
        </if>
        c.isdeleted=0 AND b.isdeleted=0
    </select>

    <!--批量删除-->
    <update id="batchDeleteCollectors" parameterType="java.util.List">
        UPDATE <include refid="tableName"></include>
        SET isdeleted=1
        WHERE id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item.id}
        </foreach>
    </update>

    <!--插入一条楼栋信息-->
    <insert id="insertCollector" parameterType="com.minol.energymonitor.domain.entity.Collector">
        INSERT <include refid="tableName"></include> (
        <include refid="field"></include>
        ) VALUES (
        <include refid="fieldValue"></include>
        )
    </insert>

    <!--修改楼栋信息-->
    <update id="updateCollector" parameterType="com.minol.energymonitor.domain.entity.Collector">
        UPDATE <include refid="tableName"></include>
        SET
        number=#{number},
        building_id=#{building_id},
        isdeleted=#{isdeleted},
        update_by=#{update_by}
        WHERE id=#{id}
    </update>
</mapper>